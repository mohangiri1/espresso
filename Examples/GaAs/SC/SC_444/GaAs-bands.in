#!/bin/sh
#PBS -l nodes=1:ppn=32
#PBS -o GaAs_444_bands.out
#PBS -e GaAs_444_bands.err
#PBS -N GaAs_444_bands
#PBS -m be -M mohan_giri1@baylor.edu
echo "------------------"
echo
echo "Job working directory: $PBS_O_WORKDIR"
echo

num=`cat $PBS_NODEFILE | wc -l`
echo "Total processes: $num"
echo

echo "Job starting at `date`"
echo

# Get the current working directory and change to it
cd $PBS_O_WORKDIR

# Load the Quantum ESPRESSO module
module load qe/7.0

ecutwfc=80
ecut=$(($ecutwfc*9))
k=2
calculation='bands'

cat > GaAs-bands.in << EOF
&CONTROL
  calculation = $calculation
  prefix = 'GaAs'
  outdir = './output444/'
  pseudo_dir = '/data/girim/Research/pseudopotential/LDA/'
  tstress = .true.
  tprnfor = .true.
  restart_mode = 'from_scratch'
/

&SYSTEM
  degauss = 0.002
  ecutrho = $ecut
  ecutwfc = $ecutwfc
  ibrav = 0
  celldm(1) = 42.4157024
  lspinorb = .TRUE.
  nat = 128
  noncolin = .TRUE.
  ntyp = 2
  occupations = 'smearing'
  smearing = 'gaussian'
  starting_magnetization(1) = 0.0000e+00
  nosym = .true.
  nbnd = 1400
/

&ELECTRONS
  conv_thr = 1e-08
  electron_maxstep = 80
  mixing_beta = 0.3
/
ATOMIC_SPECIES
  As 74.9216 As.rel-pz-n-rrkjus_psl.0.2.UPF
  Ga 69.72 Ga.rel-pz-dn-rrkjus_psl.0.2.UPF

ATOMIC_POSITIONS {crystal}
Ga      0.000000   0.000000   0.000000
As      0.062500   0.062500   0.062500
Ga      0.000000   0.000000   0.250000
As      0.062500   0.062500   0.312500
Ga      0.000000   0.000000   0.500001
As      0.062500   0.062500   0.562501
Ga      0.000000   0.000000   0.750001
As      0.062500   0.062500   0.812501
Ga      0.000000   0.250000   0.000000
As      0.062500   0.312500   0.062500
Ga      0.000000   0.250000   0.250000
As      0.062500   0.312500   0.312500
Ga      0.000000   0.250000   0.500001
As      0.062500   0.312500   0.562501
Ga      0.000000   0.250000   0.750001
As      0.062500   0.312500   0.812501
Ga      0.000000   0.500001   0.000000
As      0.062500   0.562501   0.062500
Ga      0.000000   0.500001   0.250000
As      0.062500   0.562501   0.312500
Ga      0.000000   0.500001   0.500001
As      0.062500   0.562501   0.562501
Ga      0.000000   0.500001   0.750001
As      0.062500   0.562501   0.812501
Ga      0.000000   0.750001   0.000000
As      0.062500   0.812501   0.062500
Ga      0.000000   0.750001   0.250000
As      0.062500   0.812501   0.312500
Ga      0.000000   0.750001   0.500001
As      0.062500   0.812501   0.562501
Ga      0.000000   0.750001   0.750001
As      0.062500   0.812501   0.812501
Ga      0.250000   0.000000   0.000000
As      0.312500   0.062500   0.062500
Ga      0.250000   0.000000   0.250000
As      0.312500   0.062500   0.312500
Ga      0.250000   0.000000   0.500001
As      0.312500   0.062500   0.562501
Ga      0.250000   0.000000   0.750001
As      0.312500   0.062500   0.812501
Ga      0.250000   0.250000   0.000000
As      0.312500   0.312500   0.062500
Ga      0.250000   0.250000   0.250000
As      0.312500   0.312500   0.312500
Ga      0.250000   0.250000   0.500001
As      0.312500   0.312500   0.562501
Ga      0.250000   0.250000   0.750001
As      0.312500   0.312500   0.812501
Ga      0.250000   0.500001   0.000000
As      0.312500   0.562501   0.062500
Ga      0.250000   0.500001   0.250000
As      0.312500   0.562501   0.312500
Ga      0.250000   0.500001   0.500001
As      0.312500   0.562501   0.562501
Ga      0.250000   0.500001   0.750001
As      0.312500   0.562501   0.812501
Ga      0.250000   0.750001   0.000000
As      0.312500   0.812501   0.062500
Ga      0.250000   0.750001   0.250000
As      0.312500   0.812501   0.312500
Ga      0.250000   0.750001   0.500001
As      0.312500   0.812501   0.562501
Ga      0.250000   0.750001   0.750001
As      0.312500   0.812501   0.812501
Ga      0.500001   0.000000   0.000000
As      0.562501   0.062500   0.062500
Ga      0.500001   0.000000   0.250000
As      0.562501   0.062500   0.312500
Ga      0.500001   0.000000   0.500001
As      0.562501   0.062500   0.562501
Ga      0.500001   0.000000   0.750001
As      0.562501   0.062500   0.812501
Ga      0.500001   0.250000   0.000000
As      0.562501   0.312500   0.062500
Ga      0.500001   0.250000   0.250000
As      0.562501   0.312500   0.312500
Ga      0.500001   0.250000   0.500001
As      0.562501   0.312500   0.562501
Ga      0.500001   0.250000   0.750001
As      0.562501   0.312500   0.812501
Ga      0.500001   0.500001   0.000000
As      0.562501   0.562501   0.062500
Ga      0.500001   0.500001   0.250000
As      0.562501   0.562501   0.312500
Ga      0.500001   0.500001   0.500001
As      0.562501   0.562501   0.562501
Ga      0.500001   0.500001   0.750001
As      0.562501   0.562501   0.812501
Ga      0.500001   0.750001   0.000000
As      0.562501   0.812501   0.062500
Ga      0.500001   0.750001   0.250000
As      0.562501   0.812501   0.312500
Ga      0.500001   0.750001   0.500001
As      0.562501   0.812501   0.562501
Ga      0.500001   0.750001   0.750001
As      0.562501   0.812501   0.812501
Ga      0.750001   0.000000   0.000000
As      0.812501   0.062500   0.062500
Ga      0.750001   0.000000   0.250000
As      0.812501   0.062500   0.312500
Ga      0.750001   0.000000   0.500001
As      0.812501   0.062500   0.562501
Ga      0.750001   0.000000   0.750001
As      0.812501   0.062500   0.812501
Ga      0.750001   0.250000   0.000000
As      0.812501   0.312500   0.062500
Ga      0.750001   0.250000   0.250000
As      0.812501   0.312500   0.312500
Ga      0.750001   0.250000   0.500001
As      0.812501   0.312500   0.562501
Ga      0.750001   0.250000   0.750001
As      0.812501   0.312500   0.812501
Ga      0.750001   0.500001   0.000000
As      0.812501   0.562501   0.062500
Ga      0.750001   0.500001   0.250000
As      0.812501   0.562501   0.312500
Ga      0.750001   0.500001   0.500001
As      0.812501   0.562501   0.562501
Ga      0.750001   0.500001   0.750001
As      0.812501   0.562501   0.812501
Ga      0.750001   0.750001   0.000000
As      0.812501   0.812501   0.062500
Ga      0.750001   0.750001   0.250000
As      0.812501   0.812501   0.312500
Ga      0.750001   0.750001   0.500001
As      0.812501   0.812501   0.562501
Ga      0.750001   0.750001   0.750001
As      0.812501   0.812501   0.812501

CELL_PARAMETERS {alat}
 -0.500000   0.000000   0.500000
  0.000000   0.500000   0.500000
 -0.500000   0.500000   0.000000

EOF

#Generate K points from python:
cat > generate_k_points.py << 'EOF'
#!/usr/bin/env python3

### you need to install packages `banduppy` and `irrep` from pip

import banduppy
import shutil, os, glob
from subprocess import run
import numpy as np
import pickle

#unfold_path = banduppy.UnfoldingPath(
#    supercell=[[2, 0, 0],
#               [0, 2, 0],
#               [0, 0, 2]],  # Supercell matrix for 2x2x2 supercell
#    pathPBZ=[[0, 0, 0], [0.5, 0, 0], [0.5, 0.25, 0.25], [0.375, 0.375, 0.75], [0, 0, 0],
#             [0.5, 0.5, 0.5], [0.625, 0.25, 0.625], [0.5, 0.25, 0.25], [0.5, 0.5, 0.5],
#             [0.375, 0.375, 0.75]],  # Path nodes in reduced coordinates in the PBZ
#    nk=(30, 30, 30, 30, 30, 30, 30, 30, 30),  # Number of k-points in each segment
#    labels="GXWKGLUWLK"  # High-symmetry points
#)

unfold_path = banduppy.UnfoldingPath(
    supercell=[[4, 0, 0],
               [0, 4, 0],
               [0, 0, 4]],  # Supercell matrix for 2x2x2 supercell
    pathPBZ=[[0.5, 0, 0], [0, 0, 0], [0.5, 0.5, 0.5]],  # Path nodes in reduced coordinates in the PBZ
    nk=(30, 30, 30),  # Number of k-points in each segment
    labels="XGL"  # High-symmetry points
)

unfold = banduppy.Unfolding(
    supercell=[[4, 0, 0],
               [0, 4, 0],
               [0, 0, 4]],  # Supercell matrix for 2x2x2 supercell
    kpointsPBZ=np.array([np.linspace(0.0, 0.5, 12)]*3).T  # Adjust k-points if needed
)

kpointsPBZ = unfold_path.kpoints_SBZ_str()

pw_file = "GaAs"  # Use the appropriate input file name for GaAs
#shutil.copy("input/" + pw_file + "-scf.in", ".")
open(pw_file + "-bands.in", "w").write(open(pw_file + "-bands.in").read() + kpointsPBZ)
EOF

# Activate the Python virtual environment
source /home/girim/python_venv/my-python/bin/activate

# Run the script to generate k-points
python3 generate_kpoints.py

# Run SCF calculation.
mpirun -np 32 pw.x < GaAs-bands.in > GaAs-bands.out
cat > banduppy_unfolding.py << 'EOF'
#!/usr/bin/env python3

### you need to install packages `banduppy` and `irrep` from pip

import banduppy
import shutil, os, glob
from subprocess import run
import numpy as np
import pickle

QEpath = ""

nproc = 32
PWSCF = "mpirun -np {np}  {QEpath}/pw.x -nk {npk} -nb {npb}".format(np=nproc, QEpath=QEpath, npk=nproc/4, npb=4).split()

#unfold_path = banduppy.UnfoldingPath(
#    supercell=[[2, 0, 0],
#               [0, 2, 0],
#               [0, 0, 2]],  # Supercell matrix for 2x2x2 supercell
#    pathPBZ=[[0, 0, 0], [0.5, 0, 0], [0.5, 0.25, 0.25], [0.375, 0.375, 0.75], [0, 0, 0],
#             [0.5, 0.5, 0.5], [0.625, 0.25, 0.625], [0.5, 0.25, 0.25], [0.5, 0.5, 0.5],
#             [0.375, 0.375, 0.75]],  # Path nodes in reduced coordinates in the PBZ
#    nk=(30, 30, 30, 30, 30, 30, 30, 30, 30),  # Number of k-points in each segment
#    labels="GXWKGLUWLK"  # High-symmetry points
#)

unfold_path = banduppy.UnfoldingPath(
    supercell=[[4, 0, 0],
               [0, 4, 0],
               [0, 0, 4]],  # Supercell matrix for 2x2x2 supercell
    pathPBZ=[[0.5, 0, 0], [0, 0, 0], [0.5, 0.5, 0.5]],  # Path nodes in reduced coordinates in the PBZ
    nk=(30, 30, 30),  # Number of k-points in each segment
    labels="XGL"  # High-symmetry points
)

unfold = banduppy.Unfolding(
    supercell=[[4, 0, 0],
               [0, 4, 0],
               [0, 0, 4]],  # Supercell matrix for 2x2x2 supercell
    kpointsPBZ=np.array([np.linspace(0.0, 0.5, 12)]*3).T  # Adjust k-points if needed
)

kpointsPBZ = unfold_path.kpoints_SBZ_str()

try:
    print("unpickling unfold")
    unfold_path = pickle.load(open("unfold-path.pickle", "rb"))
    unfold = pickle.load(open("unfold.pickle", "rb"))
except Exception as err:
    print("error while unpickling unfold '{}', unfolding it".format(err))
    try:
        print("unpickling bandstructure")
        bands = pickle.load(open("bandstructure.pickle", "rb"))
        print("unpickling - success")
    except Exception as err:
        print("Unable to unpickle bandstructure '{}' \n  Reading bandstructure from .save folder ".format(err))
        try:
            bands = banduppy.BandStructure(code="espresso", prefix="GaAs")  # Use the appropriate prefix for GaAs
        except Exception as err:
            print("error reading bandstructure '{}' \n calculating it".format(err))
            pw_file = "GaAs"  # Use the appropriate input file name for GaAs
            shutil.copy("input/" + pw_file + "-scf.in", ".")
            open(pw_file + "-bands.in", "w").write(open("input/" + pw_file + "-bands.in").read() + kpointsPBZ)
            scf_run = run(PWSCF, stdin=open(pw_file + "-scf.in"), stdout=open(pw_file + "-scf.out", "w"))
            bands_run = run(PWSCF, stdin=open(pw_file + "-bands.in"), stdout=open(pw_file + "-bands.out", "w"))
            for f in glob.glob("*.wfc*"):
                os.remove(f)
            bands = banduppy.BandStructure(code="espresso", prefix="GaAs")
        pickle.dump(bands, open("bandstructure.pickle", "wb"))

    unfold_path.unfold(bands, break_thresh=0.1, suffix="path")
    unfold.unfold(bands, suffix="GL")
    pickle.dump(unfold_path, open("unfold-path.pickle", "wb"))
    pickle.dump(unfold, open("unfold.pickle", "wb"))

# Now plot the result as fat band
unfold_path.plot(save_file="unfold_fatband.png", plotSC=True, Emin=-5, Emax=5, Ef='auto', fatfactor=50, mode='fatband')
# Or as a colormap
unfold_path.plot(save_file="unfold_density.png", plotSC=True, Emin=-5, Emax=5, Ef='auto', mode='density', smear=0.2, nE=200)

# Or use the data to plot in any other format
data = np.loadtxt("bandstructure_unfolded-path.txt")

EOF
# Activate the Python virtual environment
source /home/girim/python_venv/my-python/bin/activate

# Run the band unfolding script
python3 banduppy_unfolding.py

#------------------------------------------------email-----------------------------------------------------------------------------

#$ -N SendEmail
#$ -m bea
#$ -M user@domain.com

# Variables
recipient="mohan_giri1@baylor.edu"
subject="Completion of the Run"
body="The job in the HPC has been completed. The results are attached in the compressed file."
attachment="GaAs-bands.out"

# Send email
echo -e "$body" | /usr/bin/mail -s "$subject" -a "$attachment" "$recipient"

echo "Email has been sent to Mohan."

echo
echo "Job finished at `date`"
